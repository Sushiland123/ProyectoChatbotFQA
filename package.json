{
  "name": "proyecto-chatbot-fqa",
  "version": "1.0.0",
  "description": "Sistema de Chatbot con Microservicios y FAQ",
  "scripts": {
    "start": "npm run start:dev",
    "start:dev": "npm run start:dev:windows",
    "start:dev:windows": "start-dev.bat",
    "start:dev:linux": "chmod +x start-dev.sh && ./start-dev.sh",
    "start:dev:mac": "chmod +x start-dev.sh && ./start-dev.sh",
    "test": "npm run test:windows",
    "test:windows": "run-tests-simple.bat",
    "test:linux": "chmod +x run-tests.sh && ./run-tests.sh",
    "test:mac": "chmod +x run-tests.sh && ./run-tests.sh",
    "test:e2e": "cd api-gateway && npm run test:e2e",
    "test:unit": "cd chatbot-service && npm run test:unit",
    "test:integration": "cd chatbot-service && npm run test:integration",
    "test:e2e:chatbot": "cd chatbot-service && npm run test:e2e",
    "test:fallback": "cd chatbot-service && npm run test:fallback",
    "test:conversation": "cd chatbot-service && npm run test:conversation",
    "test:all": "npm run test:unit && npm run test:integration && npm run test:e2e:chatbot",
    "swagger:restart": "npm run stop && npm run start:dev",
    "swagger:check": "npm run swagger:check:gateway && npm run swagger:check:auth && npm run swagger:check:faq && npm run swagger:check:chatbot",
    "swagger:check:gateway": "curl -s http://localhost:3000/api/docs > nul && echo Gateway Swagger OK || echo Gateway Swagger ERROR",
    "swagger:check:auth": "curl -s http://localhost:3001/api/docs > nul && echo Auth Swagger OK || echo Auth Swagger ERROR",
    "swagger:check:faq": "curl -s http://localhost:3002/api/docs > nul && echo FAQ Swagger OK || echo FAQ Swagger ERROR",
    "swagger:check:chatbot": "curl -s http://localhost:3003/api/docs > nul && echo Chatbot Swagger OK || echo Chatbot Swagger ERROR",
    "docs:open:gateway": "start http://localhost:3000/api/docs",
    "docs:open:auth": "start http://localhost:3001/api/docs", 
    "docs:open:faq": "start http://localhost:3002/api/docs",
    "docs:open:chatbot": "start http://localhost:3003/api/docs",
    "install:swagger:gateway": "cd api-gateway && npm install @nestjs/swagger@7.4.2 swagger-ui-express@5.0.0 class-validator@0.14.1 class-transformer@0.5.1 --force",
    "install:swagger:auth": "cd auth-service && npm install @nestjs/swagger@7.4.2 swagger-ui-express@5.0.0 class-validator@0.14.1 class-transformer@0.5.1 --force",
    "install:swagger:faq": "cd faq-service && npm install @nestjs/swagger@7.4.2 swagger-ui-express@5.0.0 class-validator@0.14.1 class-transformer@0.5.1 --force",
    "install:swagger:chatbot": "cd chatbot-service && npm install @nestjs/swagger@7.4.2 swagger-ui-express@5.0.0 class-validator@0.14.1 class-transformer@0.5.1 --force",
    "install:gateway": "cd api-gateway && npm install",
    "install:auth": "cd auth-service && npm install", 
    "install:faq": "cd faq-service && npm install",
    "install:chatbot": "cd chatbot-service && npm install",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "prisma:generate": "cd auth-service && npx prisma generate && cd ../faq-service && npx prisma generate && cd ../chatbot-service && npx prisma generate",
    "prisma:migrate": "cd auth-service && npx prisma migrate dev && cd ../faq-service && npx prisma migrate dev",
    "lint:all": "npm run lint:gateway && npm run lint:auth && npm run lint:faq && npm run lint:chatbot",
    "lint:gateway": "cd api-gateway && npm run lint",
    "lint:auth": "cd auth-service && npm run lint",
    "lint:faq": "cd faq-service && npm run lint", 
    "lint:chatbot": "cd chatbot-service && npm run lint"
  },
  "devDependencies": {
    "concurrently": "^8.2.2"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "author": "Leonardo Escalante",
  "license": "MIT",
  "keywords": [
    "chatbot",
    "microservices",
    "nestjs",
    "postgresql",
    "jwt",
    "dialogflow",
    "openai",
    "faq"
  ]
}
